     1                                  ; hello world at desired screen location
     2                                  
     3                                  [org 0x0100]
     4                                  
     5 00000000 E96E00                      jmp start
     6                                  
     7 00000003 68656C6C6F20776F72-         message: db 'hello world!'
     8 0000000C 6C6421             
     9 0000000F 0C00                        length: dw 12
    10                                  
    11                                      clrscr:
    12 00000011 06                              push es
    13 00000012 50                              push ax
    14 00000013 57                              push di
    15                                  
    16 00000014 B800B8                          mov ax, 0xb800
    17 00000017 8EC0                            mov es, ax
    18 00000019 BF0000                          mov di, 0
    19                                  
    20                                      nextloc:
    21 0000001C 26C7052007                      mov word [es:di], 0x0720
    22 00000021 81C70200                        add di, 2
    23 00000025 81FFA00F                        cmp di, 4000
    24 00000029 75F1                            jne nextloc
    25                                  
    26 0000002B 5F                              pop di
    27 0000002C 58                              pop ax
    28 0000002D 07                              pop es
    29 0000002E C3                              ret
    30                                  
    31                                  ; subroutine to print a string at top left of screen
    32                                  ; takes x position, y position, string attribute, address of string
    33                                  ; and its length as parameters
    34                                      printstr:
    35 0000002F 55                              push bp
    36 00000030 89E5                            mov bp, sp
    37 00000032 50                              push ax
    38 00000033 51                              push cx
    39 00000034 57                              push di
    40 00000035 06                              push es
    41 00000036 56                              push si
    42                                  
    43 00000037 B800B8                          mov ax, 0xb800
    44 0000003A 8EC0                            mov es, ax
    45 0000003C 806E0A01                        sub byte [bp + 10], 1
    46 00000040 806E0C01                        sub byte [bp + 12], 1
    47 00000044 B050                            mov al, 80                  ; load al with columns per row
    48 00000046 F6660A                          mul byte [bp+10]           ; multiply with y position
    49 00000049 03460C                          add ax, [bp + 12]           ; add x position
    50 0000004C D1E0                            shl ax, 1                   
    51 0000004E 89C7                            mov di, ax
    52                                  ; mov di, 160  second row. NOPE i need 1st row. Do Key Interrupt
    53                                  
    54 00000050 8B7606                          mov si, [bp + 6]
    55 00000053 8B4E04                          mov cx, [bp + 4]
    56 00000056 8A6608                          mov ah, [bp + 8]            ; normal attribute fixed in ah. SO do it once
    57                                  
    58                                      nextchar:
    59 00000059 8A04                            mov al, [si]
    60 0000005B 268905                          mov [es:di], ax 
    61 0000005E 81C70200                        add di, 2
    62 00000062 81C60100                        add si, 1
    63 00000066 E2F1                            loop nextchar
    64                                  
    65 00000068 5E                              pop si
    66 00000069 07                              pop es
    67 0000006A 5F                              pop di
    68 0000006B 59                              pop cx
    69 0000006C 58                              pop ax
    70 0000006D 5D                              pop bp
    71 0000006E C20A00                          ret 10
    72                                  
    73                                      start:
    74 00000071 E89DFF                          call clrscr
    75                                  
    76 00000074 B84500                          mov ax, 69
    77 00000077 50                              push ax                 ; push x-position
    78 00000078 B81900                          mov ax, 25
    79 0000007B 50                              push ax                 ; push y-position
    80 0000007C B80100                          mov ax, 1
    81 0000007F 50                              push ax                 ; blue on black attribute
    82 00000080 B8[0300]                        mov ax, message 
    83 00000083 50                              push ax
    84 00000084 FF36[0F00]                      push word [length]
    85 00000088 E8A4FF                          call printstr
    86                                  
    87                                          ; wait for keypress (OS don't interfere (places prompt and scrolls onw row up) while i am displaying)
    88 0000008B B401                            mov ah, 0x1        ; input char is 0x1 in ah 
    89 0000008D CD21                            int 0x21 
    90                                  
    91                                          ; After keypress control comes from OS to program
    92                                  
    93                                      end:
    94 0000008F B8004C                          mov ax, 0x4c00
    95 00000092 CD21                            int 21h
    96                                  
