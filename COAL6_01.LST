     1                                  [org 0x0100]
     2                                  
     3 00000000 E95300                      jmp start
     4                                  
     5 00000003 3C003700                    data: dw 60, 55    ; global data
     6 00000007 00                          swapflag: db 0
     7                                  
     8                                      swap:
     9 00000008 50                              push ax
    10                                  
    11 00000009 8B4002                          mov ax, [bx + si + 2]
    12 0000000C 8700                            xchg [bx + si], ax
    13 0000000E 894002                          mov [bx + si + 2], ax
    14                                  
    15 00000011 58                              pop ax
    16 00000012 C3                              ret
    17                                  
    18                                      bubblesort:
    19 00000013 55                              push bp
    20 00000014 89E5                            mov bp, sp
    21                                  
    22 00000016 50                              push ax
    23 00000017 53                              push bx
    24 00000018 51                              push cx
    25 00000019 56                              push si
    26                                  
    27 0000001A 8B5E06                          mov bx, [bp + 6]
    28 0000001D 8B4E04                          mov cx, [bp + 4]
    29                                  
    30                                  
    31 00000020 49                              dec cx
    32 00000021 D1E1                            shl cx, 1
    33                                  
    34                                          mainloop:
    35 00000023 BE0000                              mov si, 0          ; use as array index 
    36 00000026 C606[0700]00                        mov byte [swapflag], 0  ; byte to tell cpu that byte operation perform, not word. Assembler gives error without it saying mention operation size
    37                                  
    38                                              innerloop:
    39 0000002B 8B00                                    mov ax, [bx + si]
    40 0000002D 3B4002                                  cmp ax, [bx + si + 2]
    41 00000030 7608                                    jbe noswap
    42                                  
    43 00000032 E8D3FF                                      call swap
    44 00000035 C606[0700]01                                mov byte [swapflag], 1
    45                                  
    46                                                  noswap
    47 0000003A 81C60200                                add si, 2
    48 0000003E 39F1                                    cmp cx, si
    49 00000040 75E9                                    jne innerloop
    50                                  
    51 00000042 81E90200                        sub cx, 2
    52 00000046 7407                            je limit
    53                                  
    54 00000048 803E[0700]01                        cmp byte [swapflag], 1
    55 0000004D 74D4                                je mainloop
    56                                  
    57                                          limit:
    58 0000004F 5E                                  pop si 
    59 00000050 59                                  pop cx
    60 00000051 5B                                  pop bx
    61                                              ; pop ax 
    62 00000052 5D                                  pop bp
    63 00000053 C20400                              ret 4
    64                                  
    65                                      start:
    66 00000056 BB[0300]                        mov bx, data         ; register data in main --> kind of global vars 
    67 00000059 B90200                          mov cx, 2
    68                                  
    69 0000005C 53                              push bx 
    70 0000005D 51                              push cx
    71                                  
    72 0000005E E8B2FF                          call bubblesort
    73                                  
    74 00000061 B8004C                          mov ax, 0x4c00
    75 00000064 CD21                            int 0x21
    76                                  
    77                                  
    78                                  ; F2 (ProcStep) --->>> procedure step; execute procedure in one go.  (AFD)
    79                                  
    80                                  
    81                                  ; helpful bash commands 
    82                                  
    83                                  ; hex to dec
    84                                  ; echo $((16#   F)) 
    85                                  
    86                                  ; dec to hex 
    87                                  ; printf '%x\n'   15 
    88                                  
    89                                  ; bin to hex 
    90                                  ; printf '%x\n' "$((2#   110010))" 
    91                                  
    92                                  ; hex to bin
    93                                  ; printf   '\x32'    | xxd -b | cut -d' ' -f2
